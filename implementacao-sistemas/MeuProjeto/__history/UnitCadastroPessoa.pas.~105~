unit UnitCadastroPessoa;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.Mask, Vcl.DBCtrls,
  REST.Types, REST.Client, Data.Bind.Components, Data.Bind.ObjectScope,System.JSON,
  FireDAC.Stan.Intf, FireDAC.Stan.Option, FireDAC.Stan.Param,
  FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf, FireDAC.DApt.Intf,
  Data.DB, FireDAC.Comp.DataSet, FireDAC.Comp.Client, REST.Response.Adapter,
  FireDAC.UI.Intf, FireDAC.Stan.Def, FireDAC.Stan.Pool, FireDAC.Stan.Async,
  FireDAC.Phys, FireDAC.VCLUI.Wait, FireDAC.DApt, Vcl.Buttons;

type
  TFormCadastroPessoa = class(TForm)
    Label1: TLabel;
    Label2: TLabel;
    MaskEdit1: TMaskEdit;
    Edit1: TEdit;
    RESTClient1: TRESTClient;
    RESTRequest1: TRESTRequest;
    RESTResponse1: TRESTResponse;
    Edit3: TEdit;
    Label3: TLabel;
    MaskEdit2: TMaskEdit;
    Label4: TLabel;
    Label5: TLabel;
    Edit2: TEdit;
    Edit4: TEdit;
    Label6: TLabel;
    Edit5: TEdit;
    Label7: TLabel;
    Edit6: TEdit;
    Label8: TLabel;
    Edit7: TEdit;
    Label9: TLabel;
    MemTable1: TFDMemTable;
    RESTResponseDataSetAdapter1: TRESTResponseDataSetAdapter;
    Button1: TButton;
    Label10: TLabel;
    MaskEdit3: TMaskEdit;
    Label11: TLabel;
    MaskEdit4: TMaskEdit;
    MaskEdit5: TMaskEdit;
    Label12: TLabel;
    Label13: TLabel;
    FDQuery1: TFDQuery;
    BitBtn1: TBitBtn;
    procedure Button1Click(Sender: TObject);
    procedure BitBtn1Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  FormCadastroPessoa: TFormCadastroPessoa;

implementation

Uses DbConection;

{$R *.dfm}

procedure TFormCadastroPessoa.BitBtn1Click(Sender: TObject);
begin
  with
end;

procedure TFormCadastroPessoa.Button1Click(Sender: TObject);
var
Response: TStringStream;
cep: string;
begin
  Response := TStringStream.Create('');
  cep := MaskEdit2.Text;
  cep := StringReplace(cep,'-','',[rfReplaceAll, rfIgnoreCase]);
  cep := Trim(cep);
  if cep.Length <> 8 then
  begin
    ShowMessage('Favor preencher o CEP corretamente!');
      exit;
  end;

  RestClient1.BaseURL := 'https://viacep.com.br/ws/' + cep + '/json/';

  RestRequest1.Execute;
  if RestRequest1.Response.StatusCode = 200 then
    begin
      if RestRequest1.Response.Content.IndexOf('erro') > 0 then
      ShowMessage('CEP não encontrado!')
      else
      begin
        with MemTable1 do
          begin
            MaskEdit2.Text := FieldByName('cep').AsString;
            Edit3.Text := FieldByName('logradouro').AsString;
            Edit2.Text := FieldByName('bairro').AsString;
            Edit6.Text := FieldByName('localidade').AsString;
            Edit7.Text := FieldByName('uf').AsString;
          end;
      end;
   end;


end;

end.
